[project]
name = "napari-copick"
version = "0.1.0"  # or read from file via dynamic
description = "A plugin for collaborative annotation in cryoET using copick"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [
    { name = "Kyle Harrington", email = "czi@kyleharrington.com" },
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: napari",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Image Processing"
]
dependencies = [
    "numpy",
    "magicgui",
    "qtpy",
    "scikit-image",
    "zarr",
    "trimesh",
    "fsspec",
    "pydantic>=2",
    "copick>=1.0.1",
    "napari-ome-zarr",
    "napari>=0.5.6"
]

[project.optional-dependencies]
testing = [
    "tox",
    "pytest",
    "pytest-cov",
    "pytest-qt",
    "napari",
    "pyqt5"
]

[project.entry-points."napari.manifest"]
napari-copick = "napari_copick:napari.yaml"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml"]

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 79
target-version = ['py39', 'py310']

[tool.ruff]
line-length = 79
target-version = "py39"
fix = true
lint.select = [
    "E", "F", "W", "UP", "I", "BLE", "B", "A", "C4", "ISC", "G", "PIE", "SIM"
]
lint.ignore = [
    "E501", "UP006", "UP007", "SIM117"
]
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".mypy_cache", ".pants.d", ".ruff_cache", 
    ".svn", ".tox", ".venv", "__pypackages__", "_build", "buck-out", "build", 
    "dist", "node_modules", "venv", "*vendored*", "*_vendor*"
]
